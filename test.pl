sent(1, Result) :-
      prob_parse([ ex_si('Lourdes', npp-nam, 'Lourdes', [np-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),n)-1]), ex_si(quai, nc-nom, quai, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(gare, nc-nom, gare, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(2, Result) :-
      prob_parse([ ex_si('-', ponct-pun, '-', [let-1]), ex_si('Arrivés', vpp-ver:pper, 'Arrivés', [dr(0,dl(0,np,s_ppart),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Osse', npp-nam, 'Osse', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(matin, nc-nom, matin, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,n,n),np)-1]), ex_si(nos, det-det:pos, nos, [dr(0,np,n)-1]), ex_si(vélos, nc-nom, vélos, [n-1]), ex_si(rapides, adj-adj, rapides, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(équipés, vpp-ver:pper, équipés, [dr(0,dl(0,n,n),pp)-1]), ex_si(pour, p-prp, pour, [dr(0,pp,dl(0,np,s_inf))-1]), ex_si(courir, vinf-ver:infi, courir, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(cimes, nc-nom, cimes, [n-1]), ex_si(sauvages, adj-adj, sauvages, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(attendons, v-ver:pres, attendons, [dr(0,dl(0,np,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(train, nc-nom, train, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(3, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(foule, nc-nom, foule, [n-1]), ex_si(intriguée, vpp-ver:pper, intriguée, [dl(0,n,n)-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(regarde, v-ver:pres, regarde, [dr(0,dl(0,np,s),np)-1]), ex_si(':', ponct-pun, ':', [dl(0,s,txt)-1])], Result).
sent(4, Result) :-
      prob_parse([ ex_si('-', ponct-pun, '-', [let-1]), ex_si('Je', cls-pro:per, 'Je', [np-1]), ex_si(parie, v-ver:pres, parie, [dr(0,dl(0,np,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(ils, cls-pro:per, ils, [np-1]), ex_si(vont, v-ver:pres, vont, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si('...', ponct-pun, '...', [dl(0,s,txt)-1])], Result).
sent(5, Result) :-
      prob_parse([ ex_si('-', ponct-pun, '-', [let-1]), ex_si('Ce', cls-pro:dem, 'Ce', [np-1]), ex_si(doit, v-ver:pres, doit, [dr(0,dl(0,np,s),dl(0,np,s_inf))-1]), ex_si(être, vinf-ver:infi, être, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si('Anglais', nc-nam, 'Anglais', [n-1]), ex_si('...', ponct-pun, '...', [dl(0,s,txt)-1])], Result).
sent(6, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(individu, nc-nom, individu, [n-1]), ex_si(plus, adv-adv, plus, [dr(0,dl(0,n,n),dl(0,n,n))-1]), ex_si(hardi, adj-adj, hardi, [dl(0,n,n)-1]), ex_si(soulève, v-ver:pres, soulève, [dr(0,dl(0,np,s),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),np)-1]), ex_si(nos, det-det:pos, nos, [dr(0,np,n)-1]), ex_si(sacs, nc-nom, sacs, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(le, clo-pro:per, le, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(montrant, vpr-ver:ppre, montrant, [dr(0,dr(0,dl(0,np,s_ppres),pp_a),np)-1]), ex_si(à, p-prp, à, [dr(0,pp_a,np)-1]), ex_si(sa, det-det:pos, sa, [dr(0,np,n)-1]), ex_si(petite, adj-adj, petite, [dr(0,n,n)-1]), ex_si(fille, nc-nom, fille, [n-1]), ex_si(':', ponct-pun, ':', [dl(0,s,txt)-1])], Result).
sent(7, Result) :-
      prob_parse([ ex_si('-', ponct-pun, '-', [let-1]), ex_si('Tu', cls-pro:per, 'Tu', [np-1]), ex_si(as, v-ver:pres, as, [dr(0,dl(0,np,s),np)-1]), ex_si(de, det-prp, de, [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(chance, nc-nom, chance, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,s,s),np)-1]), ex_si(toi, pro-pro:per, toi, [np-1]), ex_si(';', ponct-pun, ';', [dr(0,dl(0,s,s),s)-1]), ex_si(tu, cls-pro:per, tu, [np-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(seras, v-ver:futu, seras, [dr(0,dl(0,np,s),np)-1]), ex_si(jamais, adv-adv, jamais, [dl(1,s,s)-1]), ex_si(soldat, nc-nom, soldat, [np-1]), ex_si('!', ponct-pun, '!', [dl(0,s,txt)-1])], Result).
sent(8, Result) :-
      prob_parse([ ex_si('-', ponct-pun, '-', [let-1]), ex_si('Et', cc-kon, 'Et', [dr(0,s,s)-1]), ex_si(nous, pro-pro:per, nous, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(repasser, vinf-ver:infi, repasser, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),np)-1]), ex_si(nos, det-det:pos, nos, [dr(0,np,n)-1]), ex_si(esprits, nc-nom, esprits, [n-1]), ex_si(cette, det-pro:dem, cette, [dr(0,np,n)-1]), ex_si(pensée, nc-nom, pensée, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('Renan', npp-nam, 'Renan', [np-1]), ex_si(':', ponct-pun, ':', [dr(0,dl(0,s,s),s)-1]), ex_si('Ce', cls-pro:dem, 'Ce', [np-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(immensité, nc-nom, immensité, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(voûte, nc-nom, voûte, [n-1]), ex_si(étoilée, vpp-ver:pper, étoilée, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(peut, v-ver:pres, peut, [dr(0,dl(0,np,s),dl(0,np,s_inf))-1]), ex_si(donner, vinf-ver:infi, donner, [dr(0,dr(0,dl(0,np,s_inf),pp_a),np)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),dl(1,s,s))-1]), ex_si(plus, adv-adv, plus, [dr(0,dl(1,s,s),dl(1,s,s))-1]), ex_si(complètement, adv-adv, complètement, [dl(1,s,s)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(idée, nc-nom, idée, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(infini, nc-nom, infini, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(bien, adv-adv, bien, [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(bêtise, nc-nom, bêtise, [n-1]), ex_si(humaine, adj-adj, humaine, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(9, Result) :-
      prob_parse([ ex_si('Luchon', npp-nam, 'Luchon', [np-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(2, det-num, 2, [dr(0,np,n)-1]), ex_si(heures, nc-nom, heures, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('après-midi', nc-nom, 'après-midi', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(10, Result) :-
      prob_parse([ ex_si('-', ponct-pun, '-', [let-1]), ex_si('C\'', cls-pro:dem, 'C\'', [np-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),np)-1]), ex_si(jour, nc-nom, jour, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(courses, nc-nom, courses, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(11, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(milieu, nc-nom, milieu, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(belle, adj-adj, belle, [dr(0,n,n)-1]), ex_si(société, nc-nom, société, [n-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(écrase, v-ver:pres, écrase, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(sur, p-prp, sur, [dr(0,dl(1,s,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(allées, nc-nom, allées, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si('Etigny', npp-nam, 'Etigny', [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(brillent, v-ver:pres, brillent, [dr(0,dl(0,np,s),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(moment, nc-nom, moment, [n-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(acier, nc-nom, acier, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(notre, det-det:pos, notre, [dr(0,np,n)-1]), ex_si(hachette, nc-nom, hachette, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(étain, nc-nom, étain, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(notre, det-det:pos, notre, [dr(0,np,n)-1]), ex_si(chaudron, nc-nom, chaudron, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(12, Result) :-
      prob_parse([ ex_si('Mais', cc-kon, 'Mais', [dr(0,s,s)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('qu\'', prowh-pro:rel, 'qu\'', [dr(0,dl(1,s,s),dl(1,s,s))-1]), ex_si(est, v-ver:pres, est, [dr(0,dr(0,s,np),np)-1]), ex_si('-ce', cls-pro:dem, '-ce', [np-1]), ex_si(donc, adv-adv, donc, [dl(1,s,s)-1]), ex_si('?', ponct-pun, '?', [dl(0,s,txt)-1])], Result).
sent(13, Result) :-
      prob_parse([ ex_si('Pourquoi', advwh-adv, 'Pourquoi', [dr(0,s_whq,s)-1]), ex_si(ces, det-pro:dem, ces, [dr(0,np,n)-1]), ex_si(figures, nc-nom, figures, [n-1]), ex_si(ébahies, vpp-ver:pper, ébahies, [dl(0,n,n)-1]), ex_si('?', ponct-pun, '?', [dl(0,s,txt)-1])], Result).
sent(14, Result) :-
      prob_parse([ ex_si('Une', det-det:art, 'Une', [dr(0,np,n)-1]), ex_si(expédition, nc-nom, expédition, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(ce, det-pro:dem, ce, [dr(0,np,n)-1]), ex_si(genre, nc-nom, genre, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),np)-1]), ex_si('-elle', cls-pro:per, '-elle', [dl(1,s,s)-1]), ex_si(chose, nc-nom, chose, [np-1]), ex_si(si, adv-adv, si, [dr(0,dl(0,n,n),dl(0,n,n))-1]), ex_si(extraordinaire, adj-adj, extraordinaire, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(elle, cls-pro:per, elle, [np-1]), ex_si(excite, v-ver:pres, excite, [dr(0,dl(0,np,s),np)-1]), ex_si(à, p-prp, à, [dr(0,dl(1,s,s),np)-1]), ex_si(ce, det-pro:dem, ce, [dr(0,np,n)-1]), ex_si(point, nc-nom, point, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(curiosité, nc-nom, curiosité, [n-1]), ex_si(générale, adj-adj, générale, [dl(0,n,n)-1]), ex_si('?', ponct-pun, '?', [dl(0,s,txt)-1])], Result).
sent(15, Result) :-
      prob_parse([ ex_si('Ne', adv-adv, 'Ne', [dr(0,s,s)-1]), ex_si(sommes, v-ver:pres, sommes, [dr(0,dr(0,s,pp),np)-1]), ex_si('-nous', cls-pro:per, '-nous', [np-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(en, p-prp, en, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(reine, nc-nom, reine, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Pyrénées', npp-nam, 'Pyrénées', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,pp,pp),pp)-1]), ex_si(au, p+d-prp:det, au, [dr(0,pp_a,n)-1]), ex_si(coeur, nc-nom, coeur, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(pyrénéisme, nc-nom, pyrénéisme, [n-1]), ex_si('?', ponct-pun, '?', [dl(0,s,txt)-1])], Result).
sent(16, Result) :-
      prob_parse([ ex_si('Vallée', nc-nom, 'Vallée', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si('Pique', npp-nam, 'Pique', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(17, Result) :-
      prob_parse([ ex_si('Par', p-prp, 'Par', [dr(0,dr(0,s,s),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(soleil, nc-nom, soleil, [n-1]), ex_si(brûlant, vpr-ver:ppre, brûlant, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(sous, p-prp, sous, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(écrasement, nc-nom, écrasement, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(sac, nc-nom, sac, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(route, nc-nom, route, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(déroule, v-ver:pres, déroule, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(sans, p-prp, sans, [dr(0,dl(1,s,s),n)-1]), ex_si(fin, nc-nom, fin, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(pente, nc-nom, pente, [n-1]), ex_si(escarpée, vpp-ver:pper, escarpée, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(18, Result) :-
      prob_parse([ ex_si('Dans', p-prp, 'Dans', [dr(0,dr(0,s,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(dix, adj-num, dix, [dr(0,n,n)-1]), ex_si(jours, nc-nom, jours, [n-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(suivront, v-ver:futu, suivront, [dl(0,np,s)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(aucun, det-pro:ind, aucun, [dr(0,np,n)-1]), ex_si(effort, nc-nom, effort, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(paraîtra, v-ver:futu, paraîtra, [dr(0,dl(0,np,s),np)-1]), ex_si(aussi, adv-adv, aussi, [dl(1,s,s)-1]), ex_si(rude, adj-adj, rude, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(19, Result) :-
      prob_parse([ ex_si('Hospice', npp-nam, 'Hospice', [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),np)-1]), ex_si('France', npp-nam, 'France', [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(20, Result) :-
      prob_parse([ ex_si('Nous', cls-pro:per, 'Nous', [np-1]), ex_si(tournons, v-ver:pres, tournons, [dr(0,dl(0,np,s),pp)-1]), ex_si(à, p-prp, à, [dr(0,pp_a,n)-1]), ex_si(droite, nc-nom, droite, [n-1]), ex_si(vers, p-prp, vers, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(port, nc-nom, port, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('Vénasque', npp-nam, 'Vénasque', [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(21, Result) :-
      prob_parse([ ex_si('Montée', nc-nom, 'Montée', [n-1]), ex_si(silencieuse, adj-adj, silencieuse, [dl(0,n,n)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(0,n,n),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(brouillard, nc-nom, brouillard, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(22, Result) :-
      prob_parse([ ex_si('Soudain', adv-adv, 'Soudain', [dr(0,s,s)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(coup, nc-nom, coup, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(vent, nc-nom, vent, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(23, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(brume, nc-nom, brume, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(déchire, v-ver:pres, déchire, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(encadre, v-ver:pres, encadre, [dr(0,dl(0,np,s),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(jolie, adj-adj, jolie, [dr(0,n,n)-1]), ex_si(cascade, nc-nom, cascade, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(24, Result) :-
      prob_parse([ ex_si('Nous', cls-pro:per, 'Nous', [np-1]), ex_si(laissons, v-ver:pres, laissons, [dr(0,dr(0,dl(0,np,s),np),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(nous, pro-pro:per, nous, [np-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(lacets, nc-nom, lacets, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si('Culet', npp-nam, 'Culet', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(25, Result) :-
      prob_parse([ ex_si('Le', det-det:art, 'Le', [dr(0,np,n)-1]), ex_si(soleil, nc-nom, soleil, [n-1]), ex_si(argenté, vpp-ver:pper, argenté, [dl(0,n,n)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(brumes, nc-nom, brumes, [n-1]), ex_si(éparses, adj-adj, éparses, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(empourpre, v-ver:pres, empourpre, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(rochers, nc-nom, rochers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si('Pique', npp-nam, 'Pique', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si(que, cs-kon, que, [dr(0,s_q,s)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si('Sajust', npp-nam, 'Sajust', [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(profile, v-ver:pres, profile, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si(noir, nc-nom, noir, [n-1]), ex_si(sur, p-prp, sur, [dr(0,pp,np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(couchant, nc-nom, couchant, [n-1]), ex_si(où, prorel-pro:rel, où, [dr(0,dl(0,n,n),s)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(or, nc-nom, or, [n-1]), ex_si(ruisselle, v-ver:pres, ruisselle, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(26, Result) :-
      prob_parse([ ex_si('Du', p+d-prp:det, 'Du', [dr(0,dr(0,s,s),n)-1]), ex_si(fond, nc-nom, fond, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(vallée, nc-nom, vallée, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(nuit, nc-nom, nuit, [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(approche, v-ver:pres, approche, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(enveloppe, v-ver:pres, enveloppe, [dr(0,dl(0,np,s),np)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(27, Result) :-
      prob_parse([ ex_si('Vallon', nc-nom, 'Vallon', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Homme', npp-nam, 'Homme', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(28, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),np)-1]), ex_si(temps, nc-nom, temps, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),dl(0,np,s_inf))-1]), ex_si(camper, vinf-ver:infi, camper, [dl(0,np,s_inf)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(29, Result) :-
      prob_parse([ ex_si('Contrairement', adv-adv, 'Contrairement', [dr(0,dr(0,s,s),pp_a)-1]), ex_si(à, p-prp, à, [dr(0,pp_a,np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(hardis, adj-adj, hardis, [dr(0,n,n)-1]), ex_si(pyrénéistes, nc-nom, pyrénéistes, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(avons, v-ver:pres, avons, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(amour, nc-nom, amour, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(fatigue, nc-nom, fatigue, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(30, Result) :-
      prob_parse([ ex_si('Nous', cls-pro:per, 'Nous', [np-1]), ex_si(tenons, v-ver:pres, tenons, [dr(0,dl(0,np,s),dl(0,np,s_inf))-1]), ex_si(trop, adv-adv, trop, [dl(1,s,s)-1]), ex_si(à, p-prp, à, [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(conserver, vinf-ver:infi, conserver, [dr(0,dl(0,np,s_inf),dl(0,n,n))-1]), ex_si(entières, adj-adj, entières, [dl(0,n,n)-1]), ex_si(nos, det-det:pos, nos, [dr(0,np,n)-1]), ex_si(forces, nc-nom, forces, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(surtout, adv-adv, surtout, [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(faculté, nc-nom, faculté, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),dl(0,np,s_inf))-1]), ex_si(sentir, vinf-ver:infi, sentir, [dl(0,np,s_inf)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(admirer, vinf-ver:infi, admirer, [dl(0,np,s_inf)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(31, Result) :-
      prob_parse([ ex_si('Fuyant', vpr-ver:ppre, 'Fuyant', [dr(0,dl(0,np,s_ppres),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(cabanes, nc-nom, cabanes, [n-1]), ex_si(étroites, adj-adj, étroites, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(sales, adj-adj, sales, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(couchons, v-ver:pres, couchons, [dr(0,dl(0,np,s),np)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(par, p-prp, par, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(beau, adj-adj, beau, [dr(0,n,n)-1]), ex_si(temps, nc-nom, temps, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(importe, v-ver:pres, importe, [dr(0,dl(0,np,s),np)-1]), ex_si(où, prorel-pro:rel, où, [dr(0,dl(0,n,n),s)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(le, det-det:art, le, [dr(0,np,dl(0,n,n))-1]), ex_si(moins, adv-adv, moins, [dr(0,dl(0,n,n),dl(0,n,n))-1]), ex_si(bas, adj-adj, bas, [dl(0,n,n)-1]), ex_si(possible, adj-adj, possible, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(32, Result) :-
      prob_parse([ ex_si('Rien', pro-pro:ind, 'Rien', [np-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(fait, v-ver:pres, fait, [dr(0,dl(0,np,s),dl(0,np,s_inf))-1]), ex_si(mieux, adv-adv, mieux, [dl(1,s,s)-1]), ex_si(dormir, vinf-ver:infi, dormir, [dr(0,dl(0,np,s_inf),s_q)-1]), ex_si(que, cs-kon, que, [dr(0,s_q,s)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(air, nc-nom, air, [n-1]), ex_si(vivifiant, vpr-ver:ppre, vivifiant, [dr(0,dl(0,n,n),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(grandes, adj-adj, grandes, [dr(0,n,n)-1]), ex_si(altitudes, nc-nom, altitudes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(33, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,s,s)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(contre, p-prp, contre, [dr(0,dr(0,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(froid, nc-nom, froid, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(contre, p-prp, contre, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(vent, nc-nom, vent, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(il, cls-pro:per, il, [np-1]), ex_si(faut, v-ver:pres, faut, [dr(0,dl(0,np,s),dl(0,np,s_inf))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(armer, vinf-ver:infi, armer, [dr(0,dl(0,cl_r,dl(0,np,s_inf)),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(précautions, nc-nom, précautions, [n-1]), ex_si(élémentaires, adj-adj, élémentaires, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(34, Result) :-
      prob_parse([ ex_si('Serrés', vpp-ver:pper, 'Serrés', [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(uns, pro-pro, uns, [n-1]), ex_si(contre, p-prp, contre, [dr(0,dl(0,np,np),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(autres, adj-adj, autres, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(pieds, nc-nom, pieds, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(sacs, nc-nom, sacs, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(peau, nc-nom, peau, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(agneau, nc-nom, agneau, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(plaid, nc-nom, plaid, [n-1]), ex_si(partant, adj-adj, partant, [dl(0,n,n)-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(genoux, nc-nom, genoux, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(recouvrant, vpr-ver:ppre, recouvrant, [dr(0,dl(0,n,n),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(têtes, nc-nom, têtes, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('par-dessus', p-prp, 'par-dessus', [dr(0,dr(0,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(tout, nc-nom, tout, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(toile, nc-nom, toile, [n-1]), ex_si(imperméable, adj-adj, imperméable, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(lourde, adj-adj, lourde, [dr(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,n,n),dr(0,n,n)),dr(0,n,n))-1]), ex_si(précieuse, adj-adj, précieuse, [dr(0,n,n)-1]), ex_si(bâche, nc-nom, bâche, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('-', ponct-pun, '-', [let-1]), ex_si(cela, pro-pro:dem, cela, [np-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,pp_a))))-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(suffi, vpp-ver:pper, suffi, [dr(0,dr(0,dl(0,np,s_ppart),pp_a),np)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(pendant, p-prp, pendant, [dr(0,dl(1,s,s),np)-1]), ex_si(nos, det-det:pos, nos, [dr(0,np,n)-1]), ex_si(neuf, adj-adj, neuf, [dr(0,n,n)-1]), ex_si(nuits, nc-nom, nuits, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(plein, adj-adj, plein, [dr(0,n,n)-1]), ex_si(air, nc-nom, air, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(pour, p-prp, pour, [dr(0,dl(1,s,s),dl(0,np,s_inf))-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(jamais, adv-adv, jamais, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(dormir, vinf-ver:infi, dormir, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ou, cc-kon, ou, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(sept, det-num, sept, [dr(0,np,n)-1]), ex_si(heures, nc-nom, heures, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(35, Result) :-
      prob_parse([ ex_si('Précieuse', adj-adj, 'Précieuse', [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,dl(0,n,n),np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(bâche, nc-nom, bâche, [n-1]), ex_si('l\'', clo-pro:per, 'l\'', [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),pp)-1]), ex_si(aussi, adv-adv, aussi, [dl(1,s,s)-1]), ex_si(pour, p-prp, pour, [dr(0,pp,np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(cuisinier, nc-nom, cuisinier, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s_ppres))-1]), ex_si(protégeant, vpr-ver:ppre, protégeant, [dr(0,dl(0,np,s_ppres),pp)-1]), ex_si(contre, p-prp, contre, [dr(0,pp,np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(vent, nc-nom, vent, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(petite, adj-adj, petite, [dr(0,n,n)-1]), ex_si(flamme, nc-nom, flamme, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(lampe, nc-nom, lampe, [n-1]), ex_si(à, p-prp, à, [dr(0,dl(0,n,n),n)-1]), ex_si(alcool, nc-nom, alcool, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,s,s),dr(0,s,s)),dr(0,s,s))-1]), ex_si(pour, p-prp, pour, [dr(0,dr(0,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(photographe, nc-nom, photographe, [n-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(obtient, v-ver:pres, obtient, [dr(0,dl(0,np,s),np)-1]), ex_si(sous, p-prp, sous, [dr(0,dl(1,s,s),np)-1]), ex_si(elle, pro-pro:per, elle, [np-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(chambre, nc-nom, chambre, [n-1]), ex_si(noire, adj-adj, noire, [dl(0,n,n)-1]), ex_si(où, prorel-pro:rel, où, [dr(0,dl(0,n,n),s)-1]), ex_si(il, cls-pro:per, il, [np-1]), ex_si(peut, v-ver:pres, peut, [dr(0,dl(0,np,s),dl(0,np,s_inf))-1]), ex_si(charger, vinf-ver:infi, charger, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(ses, det-det:pos, ses, [dr(0,np,n)-1]), ex_si(châssis, nc-nom, châssis, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(36, Result) :-
      prob_parse([ ex_si('Après', p-prp, 'Après', [dr(0,dr(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s_inf))-1]), ex_si(avoir, vinf-ver:infi, avoir, [dr(0,dl(0,np,s_inf),dl(0,np,s_ppart))-1]), ex_si(laissé, vpp-ver:pper, laissé, [dr(0,dr(0,dl(0,np,s_ppart),np),pp)-1]), ex_si(à, p-prp, à, [dr(0,pp_a,n)-1]), ex_si(droite, nc-nom, droite, [n-1]), ex_si(quelques, det-pro:ind, quelques, [dr(0,np,n)-1]), ex_si(lacs, nc-nom, lacs, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(dont, prorel-pro:rel, dont, [dr(0,dr(0,dl(0,n,n),dl(0,np,s)),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(dernier, adj-adj, dernier, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(sous, p-prp, sous, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(pic, nc-nom, pic, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('Sauvegarde', npp-nam, 'Sauvegarde', [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(manque, v-ver:pres, manque, [dr(0,dl(0,np,s),pp_de)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(intérêt, nc-nom, intérêt, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nappe, v-ver:pres, nappe, [dr(0,dl(0,np,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(vert, nc-nom, vert, [n-1]), ex_si(profond, adj-adj, profond, [dl(0,n,n)-1]), ex_si(ceinturée, vpp-ver:pper, ceinturée, [dr(0,dl(0,n,n),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(rocs, nc-nom, rocs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,pp,pp),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(neiges, nc-nom, neiges, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(atteignons, v-ver:pres, atteignons, [dr(0,dl(0,np,s),np)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),np)-1]), ex_si('trente-cinq', det-num, 'trente-cinq', [dr(0,np,n)-1]), ex_si(minutes, nc-nom, minutes, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(port, nc-nom, port, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(vénasque, nc-nom, vénasque, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(37, Result) :-
      prob_parse([ ex_si('Vue', nc-nom, 'Vue', [n-1]), ex_si(subite, adj-adj, subite, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(grandiose, adj-adj, grandiose, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(resplendissante, vpr-ver:ppre, resplendissante, [dr(0,dl(0,n,n),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si('Monts-Maudits', npp-nam, 'Monts-Maudits', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(caressés, vpp-ver:pper, caressés, [dr(0,dl(0,n,n),pp_par)-1]), ex_si(par, p-prp, par, [dr(0,pp_par,np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(soleil, nc-nom, soleil, [n-1]), ex_si(matinal, adj-adj, matinal, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(38, Result) :-
      prob_parse([ ex_si('Deux', pro-num, 'Deux', [np-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,np),pp)-1]), ex_si(entre, p-prp, entre, [dr(0,pp,np)-1]), ex_si(nous, pro-pro:per, nous, [np-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(en, clo-pro:per, en, [dr(0,dl(0,cl_r,dl(0,np,s)),dl(0,cl_r,dl(0,np,s)))-1]), ex_si(vont, v-ver:pres, vont, [dr(0,dl(0,np,s),pp)-1]), ex_si(vers, p-prp, vers, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si('Rencluse', npp-nam, 'Rencluse', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(cacher, vinf-ver:infi, cacher, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(sous, p-prp, sous, [dr(0,dl(1,s,s),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(rocher, nc-nom, rocher, [n-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(sac, nc-nom, sac, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(musette, nc-nom, musette, [n-1]), ex_si(contenant, vpr-ver:ppre, contenant, [dr(0,dl(0,n,n),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(objets, nc-nom, objets, [n-1]), ex_si('qu\'', prorel-pro:rel, 'qu\'', [dr(0,dl(0,n,n),dr(0,s,dia(1,box(1,np))))-1]), ex_si(il, cls-pro:per, il, [np-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,pp_a))))-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,n,n))-1]), ex_si(inutile, adj-adj, inutile, [dr(0,dl(0,n,n),dl(0,np,s_inf))-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(porter, vinf-ver:infi, porter, [dr(0,dl(0,np,s_inf),pp)-1]), ex_si(à, p-prp, à, [dr(0,pp_a,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Aneto', npp-nam, 'Aneto', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(39, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(autres, adj-adj, autres, [n-1]), ex_si(coupent, v-ver:pres, coupent, [dr(0,dl(0,np,s),np)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si(ligne, nc-nom, ligne, [n-1]), ex_si(droite, nc-nom, droite, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(pentes, nc-nom, pentes, [n-1]), ex_si(gazonnées, vpp-ver:pper, gazonnées, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(descendent, v-ver:pres, descendent, [dr(0,dl(0,np,s),pp_de)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(port, nc-nom, port, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si('Picade', npp-nam, 'Picade', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(40, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(est, v-ver:pres, est, [dr(0,dr(0,dl(0,np,s),s_q),dl(0,n,n))-1]), ex_si(9, nc-num, 9, [n-1]), ex_si(h, nc-abr, h, [dr(0,dl(0,n,n),n)-1]), ex_si(30, nc-num, 30, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(lorsque, cs-kon, lorsque, [dr(0,dl(1,s,s),s)-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(quittons, v-ver:pres, quittons, [dr(0,dl(0,np,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(étrange, adj-adj, étrange, [dr(0,n,n)-1]), ex_si(trou, nc-nom, trou, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si('Toro', npp-nam, 'Toro', [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(1,s,s),dl(0,np,s_inf))-1]), ex_si(traverser, vinf-ver:infi, traverser, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(plan, nc-nom, plan, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(aygualuts, nc-nom, aygualuts, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(41, Result) :-
      prob_parse([ ex_si('C\'', cls-pro:dem, 'C\'', [np-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(endroit, nc-nom, endroit, [n-1]), ex_si(charmant, adj-adj, charmant, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(mérité, vpp-ver:pper, mérité, [dr(0,dl(0,np,s_ppart),dl(0,np,s_inf))-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(être, vinf-ver:infi, être, [dr(0,dl(0,np,s_inf),dl(0,np,s_pass))-1]), ex_si(chanté, vpp-ver:pper, chanté, [dr(0,dl(0,np,s_pass),pp_par)-1]), ex_si(par, p-prp, par, [dr(0,pp_par,np)-1]), ex_si('Russell', npp-nam, 'Russell', [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(42, Result) :-
      prob_parse([ ex_si('Nous', cls-pro:per, 'Nous', [np-1]), ex_si(nous, clr-pro:per, nous, [cl_r-1]), ex_si(engageons, v-ver:pres, engageons, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(jolie, adj-adj, jolie, [dr(0,n,n)-1]), ex_si(vallée, nc-nom, vallée, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(las, et-det:art, las, [dr(0,np,np)-1]), ex_si(salenques, npp-nam, salenques, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(toute, adv-adv, toute, [dr(0,dl(0,n,n),dl(0,n,n))-1]), ex_si(bruyante, adj-adj, bruyante, [dl(0,n,n)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(eaux, nc-nom, eaux, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(cascades, nc-nom, cascades, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(arrivons, v-ver:pres, arrivons, [dr(0,dl(0,np,s),np)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(après, p-prp, après, [dr(0,dr(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s_inf))-1]), ex_si(avoir, vinf-ver:infi, avoir, [dr(0,dl(0,np,s_inf),dl(0,np,s_ppart))-1]), ex_si(incliné, vpp-ver:pper, incliné, [dr(0,dl(0,np,s_ppart),pp)-1]), ex_si(sur, p-prp, sur, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(droite, nc-nom, droite, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(sous, p-prp, sous, [dr(0,dl(0,n,n),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(grand, adj-adj, grand, [dr(0,n,n)-1]), ex_si(glacier, nc-nom, glacier, [n-1]), ex_si('N.-E.', npp-abr, 'N.-E.', [dl(0,n,n)-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Aneto', npp-nam, 'Aneto', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(où, prorel-pro:rel, où, [dr(0,dl(0,n,n),s)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,np)-1]), ex_si(on, cls-pro:per, on, [np-1]), ex_si(souffle, v-ver:pres, souffle, [dr(0,dl(0,np,s),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(moment, nc-nom, moment, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(43, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(détour, nc-nom, détour, [n-1]), ex_si(à, p-prp, à, [dr(0,dl(0,n,n),n)-1]), ex_si(gauche, nc-nom, gauche, [n-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(met, v-ver:pres, met, [dr(0,dr(0,dl(0,np,s),pp),np)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,dl(0,n,n),pp_de)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(lac, nc-nom, lac, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(barrancs, nc-nom, barrancs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(44, Result) :-
      prob_parse([ ex_si('Impressionnante', adj-adj, 'Impressionnante', [dr(0,np,n)-1]), ex_si(apparition, nc-nom, apparition, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(cette, det-pro:dem, cette, [dr(0,np,n)-1]), ex_si(eau, nc-nom, eau, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(bleu, adj-adj, bleu, [dr(0,n,n)-1]), ex_si(ciel, nc-nom, ciel, [n-1]), ex_si(laiteux, adj-adj, laiteux, [dl(0,n,n)-1]), ex_si(indéfinissable, adj-adj, indéfinissable, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(allonge, v-ver:pres, allonge, [dr(0,dl(0,np,s),np)-1]), ex_si(son, det-det:pos, son, [dr(0,np,n)-1]), ex_si(scintillement, nc-nom, scintillement, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(0,n,n),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(corridor, nc-nom, corridor, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(roches, nc-nom, roches, [n-1]), ex_si(abruptes, adj-adj, abruptes, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(45, Result) :-
      prob_parse([ ex_si('Revenant', vpr-ver:ppre, 'Revenant', [dr(0,dl(0,np,s_ppres),pp)-1]), ex_si(sur, p-prp, sur, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(droite, nc-nom, droite, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(gagnons, v-ver:pres, gagnons, [dr(0,dl(0,np,s),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(petit, adj-adj, petit, [dr(0,n,n)-1]), ex_si(col, nc-nom, col, [n-1]), ex_si(que, prorel-pro:rel, que, [dr(0,dl(0,n,n),dr(0,s,dia(1,box(1,np))))-1]), ex_si(mentionnent, v-ver:pres, mentionnent, [dr(0,dr(0,s,np),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si('Guides', npp-nam, 'Guides', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(46, Result) :-
      prob_parse([ ex_si('Ici', adv-adv, 'Ici', [dr(0,s,s)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(quittons, v-ver:pres, quittons, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(voies, nc-nom, voies, [n-1]), ex_si(battues, vpp-ver:pper, battues, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(47, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(lieu, nc-nom, lieu, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),dl(0,np,s_inf))-1]), ex_si(descendre, vinf-ver:infi, descendre, [dl(0,np,s_inf)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(vallon, nc-nom, vallon, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(commence, v-ver:pres, commence, [dl(0,np,s)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(1,s,s),n)-1]), ex_si(lac, nc-nom, lac, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Barrancs', npp-nam, 'Barrancs', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(remonte, v-ver:pres, remonte, [dr(0,dl(0,np,s),np)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si(face, nc-nom, face, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(nous, pro-pro:per, nous, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('jusqu\'', p-prp, 'jusqu\'', [dr(0,dl(1,s,s),pp)-1]), ex_si(au, p+d-prp:det, au, [dr(0,pp_a,n)-1]), ex_si(col, nc-nom, col, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(las, et-det:art, las, [dr(0,np,np)-1]), ex_si('Salenques', npp-nam, 'Salenques', [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(nous, cls-pro:per, nous, [np-1]), ex_si(coupons, nc-nom, coupons, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(1,s,s),n)-1]), ex_si('S.-S.-O.', npp-abr, 'S.-S.-O.', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(en, p-prp, en, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s_ppres))-1]), ex_si(nous, clr-pro:per, nous, [cl_r-1]), ex_si(élevant, vpr-ver:ppre, élevant, [dr(0,dl(0,cl_r,dl(0,np,s_ppres)),pp_de)-1]), ex_si(un, det-det:art, un, [dr(0,dl(1,s,s),n)-1]), ex_si(peu, adv-adv, peu, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(cascades, nc-nom, cascades, [n-1]), ex_si('qu\'', prorel-pro:rel, 'qu\'', [dr(0,dl(0,n,n),dr(0,s,dia(1,box(1,np))))-1]), ex_si(envoie, v-ver:pres, envoie, [dr(0,dr(0,s,np),np)-1]), ex_si(vers, p-prp, vers, [dr(0,dl(1,s,s),np)-1]), ex_si(ce, det-pro:dem, ce, [dr(0,np,n)-1]), ex_si(lac, nc-nom, lac, [n-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(glacier, nc-nom, glacier, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Aneto', npp-nam, 'Aneto', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(48, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(désolation, nc-nom, désolation, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(paysage, nc-nom, paysage, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(évoquerait, v-ver:cond, évoquerait, [dr(0,dl(0,np,s),np)-1]), ex_si(que, adv-adv, que, [dr(0,np,np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(idées, nc-nom, idées, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(mort, nc-nom, mort, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(troupe, nc-nom, troupe, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(isards, nc-nom, isards, [n-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(dévale, v-ver:pres, dévale, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(éboulis, nc-nom, éboulis, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si('là-bas', adv-adv, 'là-bas', [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(49, Result) :-
      prob_parse([ ex_si('Entrée', nc-nom, 'Entrée', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(gorge, nc-nom, gorge, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(largement, adv-adv, largement, [dr(0,dl(0,n,n),dl(0,n,n))-1]), ex_si(évasée, vpp-ver:pper, évasée, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(tombe, v-ver:pres, tombe, [dr(0,dl(0,np,s),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(brèche, nc-nom, brèche, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Tempêtes', nc-nom, 'Tempêtes', [n-1]), ex_si(vers, p-prp, vers, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('E.-N.-E.', npp-abr, 'E.-N.-E.', [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,n,n),dl(0,n,n)),dl(0,n,n))-1]), ex_si(que, prorel-pro:rel, que, [dr(0,dl(0,n,n),dr(0,s,dia(1,box(1,np))))-1]), ex_si(comble, v-ver:pres, comble, [dr(0,dr(0,s,np),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(beau, adj-adj, beau, [dr(0,n,n)-1]), ex_si(glacier, nc-nom, glacier, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(las, et-det:art, las, [dr(0,np,np)-1]), ex_si(salenques, npp-nam, salenques, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(50, Result) :-
      prob_parse([ ex_si('C\'', cls-pro:dem, 'C\'', [np-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(premier, adj-num, premier, [dr(0,n,n)-1]), ex_si(glacier, nc-nom, glacier, [n-1]), ex_si('qu\'', prorel-pro:rel, 'qu\'', [dr(0,dl(0,n,n),dr(0,s,dia(1,box(1,np))))-1]), ex_si(aucun, det-pro:ind, aucun, [dr(0,np,n)-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(nous, clo-pro:per, nous, [dr(0,dl(0,np,s),dr(0,dl(0,np,s),dia(1,box(1,np))))-1]), ex_si(ait, vs-ver:subp, ait, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(vu, vpp-ver:pper, vu, [dr(0,dr(0,dl(0,np,s_ppart),dl(0,np,s_inf)),np)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(près, adv-adv, près, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
